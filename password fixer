import string
import random

# Start of the program has a similar framework to part 1a

username = input ("Enter your username: ")

username_check = 0

invalid = True

while invalid:
    password = input ("Enter a password: ")

    lenpass = len ( password ) 

    print ( "Length of password: ", lenpass )

    if username in password:
        print ( "Username is part of password: True" )
        username_check += 1
    else:
        print ( "Username is part of password: False" )
    
    upper_count = 0
    lower_count = 0
    digits = 0
    invalid_digits = 0
    specialchar = 0
    
    for x in password:
        if x.isupper():
            upper_count+=1
        elif x.islower():
            lower_count+=1
        elif x.isdigit():
            digits += 1
        elif x == "#" or x == "$" or x == "%" or x == "&":
            specialchar += 1

        else:
            invalid_digits += 1
            
    print (" # of uppercase characters in the password: ", upper_count)
    print (" # of lowercase characters in the password: ", lower_count)
    print (" # of digits in the password: ", digits)
    print (" # of special characters in the password: ", specialchar)
    print (" # of invalid characters in the password: ", invalid_digits)

    if lenpass < 9 or username_check != 0 or upper_count == 0 or lower_count == 0 or digits == 0 or specialchar == 0:
        print("Password is invalid")
        print()

        choice = input("Would you like us to fix your password for you? ")

        while True:
            if choice != "yes" and choice != "no":
                print("Invalid input. Try again")

                # Give user the option of letting the program auto generate a valid password
                
                choice = input("Would you like us to fix your password for you? ")
            else:
                break

        if choice == "yes":

            if username in password:
                temp_password = ""

                # if the username is part of the password, insert a random valid character to remove it 
                
                rand_lower_int = random.randint(97, 123)
                rand_lower = chr(rand_lower_int)
                rand_pos = random.randint(0, lenpass - 1)
                temp_password = password[:rand_pos] + str(rand_lower) + password[rand_pos:]
                password = temp_password
                lenpass = len(password)
                print("* Username is in password - inserting random character to remove it: ", password)

            # if there are invalid digits, remove them
            
            if invalid_digits != 0:
                for j in password:
                    if j.isupper()==False and j.islower()==False and j.isdigit()==False and specialchar == 0:
                        password = password.replace(j,"")
                        lenpass = len(password)
                print("* New password with invalid characters removed: ", password)

            # if there are no uppercase letters, add one at a random position
            
            if upper_count == 0:

                temp_password = ""
                
                rand_upper_int = random.randint(65, 91)
                rand_upper = chr(rand_upper_int)
                rand_pos = random.randint(0, lenpass - 1)
                temp_password = password[:rand_pos] + str(rand_upper) + password[rand_pos:]
                password = temp_password
                lenpass = len(password)
                print("* Adding a random uppercase character at a random position: ", password)

            # if there are no lowercase letters, add one at a random position
             
            if lower_count == 0:

                temp_password = ""
                
                rand_lower_int = random.randint(97, 123)
                rand_lower = chr(rand_lower_int)
                rand_pos = random.randint(0, lenpass - 1)
                temp_password = password[:rand_pos] + str(rand_lower) + password[rand_pos:]
                password = temp_password
                lenpass = len(password)
                print("* Adding a random lowercase character at a random position: ", password)

             # if there are no digits, add one at a random position

            if digits == 0:

                temp_password = ""
                
                rand_digits_int = random.randint(48, 58)
                rand_digits = chr(rand_digits_int)
                rand_pos = random.randint(0, lenpass - 1)
                temp_password = password[:rand_pos] + str(rand_digits) + password[rand_pos:]
                password = temp_password
                lenpass = len(password)
                print("* Adding a random digit character at a random position: ", password)

            # if there are no special chars, add one at a random position
            
            if specialchar == 0:

                temp_password = ""
                
                rand_sp = random.choice(["#", "%", "&", "$"])   
                rand_pos = random.randint(0, lenpass - 1)
                temp_password = password[:rand_pos] + str(rand_sp) + password[rand_pos:]
                password = temp_password
                lenpass = len(password)
                print("* Adding a random special character at a random position: ", password)

            # if the password is not long enough, add enough chars to meet the min length

            if lenpass < 9:

                temp_password = ""
                
                rand_lower_int = random.randint(97, 123)
                rand_lower = chr(rand_lower_int)
                rand_pos = random.randint(0, lenpass - 1)
                temp_password = password[:rand_pos] + str(rand_lower) + password[rand_pos:]
                password = temp_password
                lenpass = len(password)
                print("* Adding a random letter to meet the minimum length: ", password)

            print("Your new password is ", password)
            break

        else:
            
            upper_count = 0
            lower_count = 0
            digits = 0
            specialchar = 0
            username_check = 0
            invalid_digits = 0
            
            continue

    else:
        print("Password is valid!")
        break


